Description: ZooKeeper Resources, Kafka Operations and Monitoring Course - (c) Stephane
  Maarek, DataCumulus.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Zookeeper 1
        Parameters:
          - Zookeeper1AZ
          - Zookeeper1SubnetParam
          - Zookeeper1IPParam
      - Label:
          default: Zookeeper 2
        Parameters:
          - Zookeeper2AZ
          - Zookeeper2SubnetParam
          - Zookeeper2IPParam
      - Label:
          default: Zookeeper 3
        Parameters:
          - Zookeeper3AZ
          - Zookeeper3SubnetParam
          - Zookeeper3IPParam
      - Label:
          default: Zookeeper 4
        Parameters:
          - Zookeeper4AZ
          - Zookeeper4SubnetParam
          - Zookeeper4IPParam
Outputs:
  Zookeeper1AZ:
    Description: Zookeeper 1 AZ
    Export:
      Name: Zookeeper1AZ
    Value:
      Ref: Zookeeper1AZ
  Zookeeper1EBS:
    Description: Zookeeper 1 EBS Volume
    Export:
      Name: Zookeeper1EBS
    Value:
      Ref: Zookeeper1EBSVolume
  Zookeeper1ENI:
    Description: Zookeeper 1 ENI Ref
    Export:
      Name: Zookeeper1ENI
    Value:
      Ref: Zookeeper1IPResource
  Zookeeper1IPOutput:
    Description: Zookeeper IP
    Export:
      Name: Zookeeper1IP
    Value:
      Ref: Zookeeper1IPParam
  Zookeeper2AZ:
    Description: Zookeeper 2 AZ
    Export:
      Name: Zookeeper2AZ
    Value:
      Ref: Zookeeper2AZ
  Zookeeper2EBS:
    Description: Zookeeper 2 EBS Volume
    Export:
      Name: Zookeeper2EBS
    Value:
      Ref: Zookeeper2EBSVolume
  Zookeeper2ENI:
    Description: Zookeeper 2 ENI Ref
    Export:
      Name: Zookeeper2ENI
    Value:
      Ref: Zookeeper2IPResource
  Zookeeper2IPOutput:
    Description: Zookeeper IP
    Export:
      Name: Zookeeper2IP
    Value:
      Ref: Zookeeper2IPParam
  Zookeeper3AZ:
    Description: Zookeeper 3 AZ
    Export:
      Name: Zookeeper3AZ
    Value:
      Ref: Zookeeper3AZ
  Zookeeper3EBS:
    Description: Zookeeper 3 EBS Volume
    Export:
      Name: Zookeeper3EBS
    Value:
      Ref: Zookeeper3EBSVolume
  Zookeeper3ENI:
    Description: Zookeeper31 ENI Ref
    Export:
      Name: Zookeeper3ENI
    Value:
      Ref: Zookeeper3IPResource
  Zookeeper3IPOutput:
    Description: Zookeeper IP
    Export:
      Name: Zookeeper3IP
    Value:
      Ref: Zookeeper3IPParam
  Zookeeper4AZ:
    Description: Zookeeper 4 AZ
    Export:
      Name: Zookeeper4AZ
    Value:
      Ref: Zookeeper4AZ
  Zookeeper4EBS:
    Description: Zookeeper 4 EBS Volume
    Export:
      Name: Zookeeper4EBS
    Value:
      Ref: Zookeeper4EBSVolume
  Zookeeper4ENI:
    Description: Zookeeper4 ENI Ref
    Export:
      Name: Zookeeper4ENI
    Value:
      Ref: Zookeeper4IPResource
  Zookeeper4IPOutput:
    Description: Zookeeper IP
    Export:
      Name: Zookeeper4IP
    Value:
      Ref: Zookeeper4IPParam
Parameters:
  Zookeeper1AZ:
    Description: Availability Zone of the Subnet
    Type: AWS::EC2::AvailabilityZone::Name
  Zookeeper1IPParam:
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
    ConstraintDescription: must be a valid IP range of the form x.x.x.x
    Default: 172.31.9.21
    Description: IP Address of the user running the template
    Type: String
  Zookeeper1SubnetParam:
    Description: Subnet where Zookeeper 1 should run
    Type: AWS::EC2::Subnet::Id
  Zookeeper2AZ:
    Description: Availability Zone of the Subnet
    Type: AWS::EC2::AvailabilityZone::Name
  Zookeeper2IPParam:
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
    ConstraintDescription: must be a valid IP range of the form x.x.x.x
    Default: 172.31.9.22
    Description: IP Address of the user running the template
    Type: String
  Zookeeper2SubnetParam:
    Description: Subnet where Zookeeper 2 should run
    Type: AWS::EC2::Subnet::Id
  Zookeeper3AZ:
    Description: Availability Zone of the Subnet
    Type: AWS::EC2::AvailabilityZone::Name
  Zookeeper3IPParam:
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
    ConstraintDescription: must be a valid IP range of the form x.x.x.x
    Default: 172.31.16.23
    Description: IP Address of the user running the template
    Type: String
  Zookeeper3SubnetParam:
    Description: Subnet where Zookeeper 3 should run
    Type: AWS::EC2::Subnet::Id 
  Zookeeper4AZ:
    Description: Availability Zone of the Subnet
    Type: AWS::EC2::AvailabilityZone::Name
  Zookeeper4IPParam:
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
    ConstraintDescription: must be a valid IP range of the form x.x.x.x
    Default: 172.31.16.21
    Description: IP Address of the user running the template
    Type: String
  Zookeeper4SubnetParam:
    Description: Subnet where moved Zookeeper 1 should run
    Type: AWS::EC2::Subnet::Id 
Resources:
  Zookeeper1EBSVolume:
    Properties:
      AvailabilityZone:
        Ref: Zookeeper1AZ
      Size: 8
      VolumeType: gp2
    Type: AWS::EC2::Volume
  Zookeeper1IPResource:
    Properties:
      Description: Zookeeper1-IP
      GroupSet:
        - Fn::GetAtt:
            - ZookeeperSecurityGroup
            - GroupId
      PrivateIpAddress:
        Ref: Zookeeper1IPParam
      SubnetId:
        Ref: Zookeeper1SubnetParam
    Type: AWS::EC2::NetworkInterface
  Zookeeper2EBSVolume:
    Properties:
      AvailabilityZone:
        Ref: Zookeeper2AZ
      Size: 8
      VolumeType: gp2
    Type: AWS::EC2::Volume
  Zookeeper2IPResource:
    Properties:
      Description: Zookeeper2-IP
      GroupSet:
        - Fn::GetAtt:
            - ZookeeperSecurityGroup
            - GroupId
      PrivateIpAddress:
        Ref: Zookeeper2IPParam
      SubnetId:
        Ref: Zookeeper2SubnetParam
    Type: AWS::EC2::NetworkInterface
  Zookeeper3EBSVolume:
    Properties:
      AvailabilityZone:
        Ref: Zookeeper3AZ
      Size: 8
      VolumeType: gp2
    Type: AWS::EC2::Volume
  Zookeeper3IPResource:
    Properties:
      Description: Zookeeper3-IP
      GroupSet:
        - Fn::GetAtt:
            - ZookeeperSecurityGroup
            - GroupId
      PrivateIpAddress:
        Ref: Zookeeper3IPParam
      SubnetId:
        Ref: Zookeeper3SubnetParam
    Type: AWS::EC2::NetworkInterface
  Zookeeper4EBSVolume:
    Properties:
      AvailabilityZone:
        Ref: Zookeeper4AZ
      Size: 8
      VolumeType: gp2
    Type: AWS::EC2::Volume
  Zookeeper4IPResource:
    Properties:
      Description: Zookeeper4-IP
      GroupSet:
        - Fn::GetAtt:
            - ZookeeperSecurityGroup
            - GroupId
      PrivateIpAddress:
        Ref: Zookeeper4IPParam
      SubnetId:
        Ref: Zookeeper4SubnetParam
    Type: AWS::EC2::NetworkInterface
  ZookeeperSecurityGroup:
    Properties:
      GroupDescription: Zookeeper Security Group
    Type: AWS::EC2::SecurityGroup
  ZookeeperSecurityGroupPort2181:
    Properties:
      CidrIp: 0.0.0.0/0
      Description: Zookeeper External Port
      FromPort: 2181
      GroupId:
        Fn::GetAtt:
          - ZookeeperSecurityGroup
          - GroupId
      IpProtocol: tcp
      ToPort: 2181
    Type: AWS::EC2::SecurityGroupIngress
  ZookeeperSecurityGroupPort22:
    Properties:
      CidrIp: 0.0.0.0/0
      Description: Zookeeper External Port
      FromPort: 22
      GroupId:
        Fn::GetAtt:
          - ZookeeperSecurityGroup
          - GroupId
      IpProtocol: tcp
      ToPort: 22
    Type: AWS::EC2::SecurityGroupIngress
  ZookeeperSecurityGroupPort2888:
    Properties:
      CidrIp: 0.0.0.0/0
      Description: Zookeeper Internal Port
      FromPort: 2888
      GroupId:
        Fn::GetAtt:
          - ZookeeperSecurityGroup
          - GroupId
      IpProtocol: tcp
      ToPort: 2888
    Type: AWS::EC2::SecurityGroupIngress
  ZookeeperSecurityGroupPort3888:
    Properties:
      CidrIp: 0.0.0.0/0
      Description: Zookeeper Internal Port
      FromPort: 3888
      GroupId:
        Fn::GetAtt:
          - ZookeeperSecurityGroup
          - GroupId
      IpProtocol: tcp
      ToPort: 3888
    Type: AWS::EC2::SecurityGroupIngress
  ZookeeperSecurityGroupPort8080:
    Properties:
      CidrIp: 0.0.0.0/0
      Description: JMX Exporter
      FromPort: 8080
      GroupId:
        Fn::GetAtt:
          - ZookeeperSecurityGroup
          - GroupId
      IpProtocol: tcp
      ToPort: 8080
    Type: AWS::EC2::SecurityGroupIngress
  ZookeeperSecurityGroupPort8778:
    Properties:
      CidrIp: 0.0.0.0/0
      Description: Jolokia Port
      FromPort: 8778
      GroupId:
        Fn::GetAtt:
          - ZookeeperSecurityGroup
          - GroupId
      IpProtocol: tcp
      ToPort: 8778
    Type: AWS::EC2::SecurityGroupIngress
  ZookeeperSecurityGroupPort9999:
    Properties:
      CidrIp: 0.0.0.0/0
      Description: JMX Port
      FromPort: 9999
      GroupId:
        Fn::GetAtt:
          - ZookeeperSecurityGroup
          - GroupId
      IpProtocol: tcp
      ToPort: 9999
    Type: AWS::EC2::SecurityGroupIngress
